.TH NEOSC_USB_PASSWD 3  2015-04-10 "" ""
.SH NAME
neosc_usb_passwd \- configure YubiKey static password
.SH SYNOPSIS
.nf
.B #include <libneosc.h>
.sp
.BI "int neosc_usb_passwd(void *handle, int slot, unsigned char *pubid,"
.BI "                     int publen, unsigned char *privid, int privlen,"
.BI "                     unsigned char *aesdata, int aeslen,"
.BI "                     int tktflags, int cfgflags, int extflags,"
.BI "                     unsigned char *newcode, int newlen,"
.BI "                     unsigned char *code, int codelen);"
.SH DESCRIPTION
The
.BR neosc_usb_passwd()
function configures the YubiKey static password functionality for the selected slot. slot must be 0 or 1 for slot 1 or slot 2. If pubid is not NULL it points to the public id which has a length of 1 to 16 bytes. privid points to the 6 byte private id. aesdata points to the 16 byte secret. tktflags may be 0 or any combination of NEOSC_TKT_TAB0, NEOSC_TKT_TAB1, NEOSC_TKT_TAB2, NEOSC_TKT_DELAY1, NEOSC_TKT_DELAY2, NEOSC_TKT_CR and NEOSC_TKT_PROTECT2. cfgflags may be 0 or any valid combination of NEOSC_CFG_PASS_SENDREF, NEOSC_CFG_PASS_SHORT, NEOSC_CFG_PASS_PACE_10, NEOSC_CFG_PASS_PACE_20, NEOSC_CFG_PASS_STRONG_1, NEOSC_CFG_PASS_STRONG_2 and NEOSC_CFG_PASS_MANUAL. extflags may be any valid combination of the global extended flags. If newcode is not NULL it points to the new 6 byte configuration access code. If code is not NULL it points to the current 6 byte configuration access code.
.SH RETURN VALUE
The
.BR neosc_usb_passwd()
function returns zero in case of success and -1 in case of any error.
.SH SEE ALSO
.BR neosc_usb_open (3)
.SH AUTHOR
Written by Andreas Steinmetz
.SH COPYRIGHT
Copyright \(co 2015 Andreas Steinmetz
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
